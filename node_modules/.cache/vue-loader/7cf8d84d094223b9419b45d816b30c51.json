{"remainingRequest":"/Users/jordan.kasper/Documents/Repositories/vue-music-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jordan.kasper/Documents/Repositories/vue-music-app/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/jordan.kasper/Documents/Repositories/vue-music-app/src/App.vue","mtime":1582241501816},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-music-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-music-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-music-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-music-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-music-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojYXBwIHsKICBmb250LWZhbWlseTogJ0F2ZW5pcicsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICMyYzNlNTA7CiAgbWFyZ2luLXRvcDogNjBweDsKfQoucGFkZGluZyB7CiAgbWFyZ2luLXRvcDogNzBweDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <app-header></app-header>\n    <app-search @searchResult=\"searched\"></app-search>\n    <div class=\"container-fluid padding\">\n      <div class=\"row\">\n        <app-results\n          :result=\"search\"\n          v-show=\"searchView\"\n          @songAdded=\"addToPlaylist\"\n          @artistLookup=\"viewArtist\"\n        ></app-results>\n        <app-playlist :playList=\"playList\" v-show=\"searchView\"></app-playlist>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <app-artist v-show=\"artistView\" :artist=\"artist\"></app-artist>\n        <app-artistsearch\n          v-show=\"artistView\"\n          :artist=\"artist\"\n          @songAdded=\"addToPlaylist\"\n        ></app-artistsearch>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport header from './components/header.vue';\nimport search from './components/search.vue';\nimport results from './components/results.vue';\nimport artist from './components/artist.vue';\nimport playlist from './components/playlist.vue';\nimport artistSearch from './components/artistSearch.vue';\n\nexport default {\n  name: 'app',\n  data() {\n    return {\n      search: null,\n      playList: [],\n      artistView: false,\n      searchView: false,\n      artist: null,\n    };\n  },\n  components: {\n    appHeader: header,\n    appSearch: search,\n    appResults: results,\n    appArtist: artist,\n    appPlaylist: playlist,\n    appArtistsearch: artistSearch,\n  },\n  methods: {\n    /**\n     * Setting search data variable to the emitted value from search component\n     *\n     * @param {String} value the value returned from the search component\n     */\n    searched(value) {\n      this.search = value;\n      this.toggle();\n    },\n    /**\n     * Toggles the components for search view and artist view\n     *\n     */\n    toggle() {\n      if (this.searchView === false && this.artistView === false) {\n        this.searchView = !this.searchView;\n      } else {\n        this.searchView = !this.searchView;\n        this.artistView = !this.artistView;\n      }\n      this.$forceUpdate();\n    },\n    /**\n     * Adding selected song from the search view to the playlist\n     *\n     * @param {String} song the value from the search view to be added to playlist\n     */\n    addToPlaylist(song) {\n      this.playList.push(song);\n    },\n    /**\n     * Setting artist variable to be passed to the artist view and toggling the views\n     *\n     * @param {String} value the value returned from the search component\n     */\n    viewArtist(songArtist) {\n      this.artistView = !this.artistView;\n      this.searchView = !this.searchView;\n      this.artist = songArtist;\n    },\n  },\n  watch: {\n    playList: {\n      handler() {\n        localStorage.setItem('playList', JSON.stringify(this.playList));\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    if (localStorage.getItem('playList')) {\n      this.playList = JSON.parse(localStorage.getItem('playList'));\n    }\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.padding {\n  margin-top: 70px;\n}\n</style>\n"]}]}